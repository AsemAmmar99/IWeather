// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import com.google.gson.Gson;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvidesRetrofitClientFactory implements Factory<Retrofit> {
  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<Gson> gsonProvider;

  public RetrofitModule_ProvidesRetrofitClientFactory(Provider<OkHttpClient> okHttpClientProvider,
      Provider<Gson> gsonProvider) {
    this.okHttpClientProvider = okHttpClientProvider;
    this.gsonProvider = gsonProvider;
  }

  @Override
  public Retrofit get() {
    return providesRetrofitClient(okHttpClientProvider.get(), gsonProvider.get());
  }

  public static RetrofitModule_ProvidesRetrofitClientFactory create(
      Provider<OkHttpClient> okHttpClientProvider, Provider<Gson> gsonProvider) {
    return new RetrofitModule_ProvidesRetrofitClientFactory(okHttpClientProvider, gsonProvider);
  }

  public static Retrofit providesRetrofitClient(OkHttpClient okHttpClient, Gson gson) {
    return Preconditions.checkNotNullFromProvides(RetrofitModule.INSTANCE.providesRetrofitClient(okHttpClient, gson));
  }
}
