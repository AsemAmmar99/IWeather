// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.data.local.WeatherDatabase;
import dev.alimansour.iweather.data.local.dao.CityDao;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideCityDaoFactory implements Factory<CityDao> {
  private final Provider<WeatherDatabase> dbProvider;

  public RoomModule_ProvideCityDaoFactory(Provider<WeatherDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public CityDao get() {
    return provideCityDao(dbProvider.get());
  }

  public static RoomModule_ProvideCityDaoFactory create(Provider<WeatherDatabase> dbProvider) {
    return new RoomModule_ProvideCityDaoFactory(dbProvider);
  }

  public static CityDao provideCityDao(WeatherDatabase db) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideCityDao(db));
  }
}
