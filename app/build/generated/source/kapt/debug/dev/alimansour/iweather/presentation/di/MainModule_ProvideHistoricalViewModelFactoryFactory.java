// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import androidx.fragment.app.FragmentActivity;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.presentation.historical.HistoricalViewModel;
import dev.alimansour.iweather.presentation.historical.HistoricalViewModelFactory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvideHistoricalViewModelFactoryFactory implements Factory<HistoricalViewModel> {
  private final Provider<FragmentActivity> activityProvider;

  private final Provider<HistoricalViewModelFactory> historicalViewModelFactoryProvider;

  public MainModule_ProvideHistoricalViewModelFactoryFactory(
      Provider<FragmentActivity> activityProvider,
      Provider<HistoricalViewModelFactory> historicalViewModelFactoryProvider) {
    this.activityProvider = activityProvider;
    this.historicalViewModelFactoryProvider = historicalViewModelFactoryProvider;
  }

  @Override
  public HistoricalViewModel get() {
    return provideHistoricalViewModelFactory(activityProvider.get(), historicalViewModelFactoryProvider.get());
  }

  public static MainModule_ProvideHistoricalViewModelFactoryFactory create(
      Provider<FragmentActivity> activityProvider,
      Provider<HistoricalViewModelFactory> historicalViewModelFactoryProvider) {
    return new MainModule_ProvideHistoricalViewModelFactoryFactory(activityProvider, historicalViewModelFactoryProvider);
  }

  public static HistoricalViewModel provideHistoricalViewModelFactory(FragmentActivity activity,
      HistoricalViewModelFactory historicalViewModelFactory) {
    return Preconditions.checkNotNullFromProvides(MainModule.INSTANCE.provideHistoricalViewModelFactory(activity, historicalViewModelFactory));
  }
}
