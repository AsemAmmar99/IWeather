// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.data.local.LocalDataSource;
import dev.alimansour.iweather.data.local.WeatherDatabase;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideLocalDataSourceFactory implements Factory<LocalDataSource> {
  private final Provider<WeatherDatabase> weatherDatabaseProvider;

  public AppModule_ProvideLocalDataSourceFactory(
      Provider<WeatherDatabase> weatherDatabaseProvider) {
    this.weatherDatabaseProvider = weatherDatabaseProvider;
  }

  @Override
  public LocalDataSource get() {
    return provideLocalDataSource(weatherDatabaseProvider.get());
  }

  public static AppModule_ProvideLocalDataSourceFactory create(
      Provider<WeatherDatabase> weatherDatabaseProvider) {
    return new AppModule_ProvideLocalDataSourceFactory(weatherDatabaseProvider);
  }

  public static LocalDataSource provideLocalDataSource(WeatherDatabase weatherDatabase) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.provideLocalDataSource(weatherDatabase));
  }
}
