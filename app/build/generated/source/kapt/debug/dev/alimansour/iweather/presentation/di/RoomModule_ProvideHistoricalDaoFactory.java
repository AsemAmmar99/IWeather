// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.data.local.WeatherDatabase;
import dev.alimansour.iweather.data.local.dao.HistoricalDao;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RoomModule_ProvideHistoricalDaoFactory implements Factory<HistoricalDao> {
  private final Provider<WeatherDatabase> dbProvider;

  public RoomModule_ProvideHistoricalDaoFactory(Provider<WeatherDatabase> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public HistoricalDao get() {
    return provideHistoricalDao(dbProvider.get());
  }

  public static RoomModule_ProvideHistoricalDaoFactory create(
      Provider<WeatherDatabase> dbProvider) {
    return new RoomModule_ProvideHistoricalDaoFactory(dbProvider);
  }

  public static HistoricalDao provideHistoricalDao(WeatherDatabase db) {
    return Preconditions.checkNotNullFromProvides(RoomModule.INSTANCE.provideHistoricalDao(db));
  }
}
