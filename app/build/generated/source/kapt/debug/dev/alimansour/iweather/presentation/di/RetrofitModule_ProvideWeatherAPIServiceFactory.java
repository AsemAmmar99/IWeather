// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.data.remote.WeatherAPIService;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RetrofitModule_ProvideWeatherAPIServiceFactory implements Factory<WeatherAPIService> {
  private final Provider<Retrofit> retrofitProvider;

  public RetrofitModule_ProvideWeatherAPIServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public WeatherAPIService get() {
    return provideWeatherAPIService(retrofitProvider.get());
  }

  public static RetrofitModule_ProvideWeatherAPIServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new RetrofitModule_ProvideWeatherAPIServiceFactory(retrofitProvider);
  }

  public static WeatherAPIService provideWeatherAPIService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(RetrofitModule.INSTANCE.provideWeatherAPIService(retrofit));
  }
}
