// Generated by Dagger (https://dagger.dev).
package dev.alimansour.iweather.presentation.di;

import androidx.fragment.app.FragmentActivity;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.alimansour.iweather.presentation.cities.CitiesViewModel;
import dev.alimansour.iweather.presentation.cities.CitiesViewModelFactory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class MainModule_ProvideCitiesViewModelFactory implements Factory<CitiesViewModel> {
  private final Provider<FragmentActivity> activityProvider;

  private final Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider;

  public MainModule_ProvideCitiesViewModelFactory(Provider<FragmentActivity> activityProvider,
      Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider) {
    this.activityProvider = activityProvider;
    this.citiesViewModelFactoryProvider = citiesViewModelFactoryProvider;
  }

  @Override
  public CitiesViewModel get() {
    return provideCitiesViewModel(activityProvider.get(), citiesViewModelFactoryProvider.get());
  }

  public static MainModule_ProvideCitiesViewModelFactory create(
      Provider<FragmentActivity> activityProvider,
      Provider<CitiesViewModelFactory> citiesViewModelFactoryProvider) {
    return new MainModule_ProvideCitiesViewModelFactory(activityProvider, citiesViewModelFactoryProvider);
  }

  public static CitiesViewModel provideCitiesViewModel(FragmentActivity activity,
      CitiesViewModelFactory citiesViewModelFactory) {
    return Preconditions.checkNotNullFromProvides(MainModule.INSTANCE.provideCitiesViewModel(activity, citiesViewModelFactory));
  }
}
